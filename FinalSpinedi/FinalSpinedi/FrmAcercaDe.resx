<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EID/2Q==
</value>
  </data>
</root>